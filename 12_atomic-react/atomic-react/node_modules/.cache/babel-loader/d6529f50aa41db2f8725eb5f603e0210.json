{"ast":null,"code":"import _objectWithoutProperties from \"/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/src/components/atoms/Icon/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n  font-size: \", \";\\n  color: \", \";\\n  width: 1em;\\n  height: 1em;\\n  margin: 0.1em;\\n  box-sizing: border-box;\\n\\n  & > svg {\\n    width: 100%;\\n    height: 100%;\\n    fill: currentColor;\\n    stroke: currentColor;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { ifProp } from 'styled-tools';\n\nvar fontSize = function fontSize(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  var size = width || height;\n  return size ? \"\".concat(size / 16, \"rem\") : '1.25em';\n};\n\nvar Wrapper = styled.span(_templateObject(), fontSize, ifProp('palette', palette({\n  grayscale: 0\n}, 1), 'currentcolor'));\n\nvar Icon = function Icon(_ref2) {\n  var icon = _ref2.icon,\n      props = _objectWithoutProperties(_ref2, [\"icon\"]);\n\n  var svg = require(\"!raw-loader!./icons/\".concat(icon, \".svg\"));\n\n  return React.createElement(Wrapper, Object.assign({}, props, {\n    dangerouslySetInnerHTML: {\n      __html: svg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  palette: PropTypes.string,\n  reverse: PropTypes.bool\n};\nexport default Icon;","map":{"version":3,"sources":["/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/src/components/atoms/Icon/index.js"],"names":["React","PropTypes","styled","palette","ifProp","fontSize","width","height","size","Wrapper","span","grayscale","Icon","icon","props","svg","require","__html","propTypes","string","isRequired","number","reverse","bool"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAuB;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACtC,MAAMC,IAAI,GAAGF,KAAK,IAAIC,MAAtB;AACA,SAAOC,IAAI,aAAMA,IAAI,GAAG,EAAb,WAAuB,QAAlC;AACD,CAHD;;AAKA,IAAMC,OAAO,GAAGP,MAAM,CAACQ,IAAV,oBAEEL,QAFF,EAGFD,MAAM,CAAC,SAAD,EAAYD,OAAO,CAAC;AAAEQ,EAAAA,SAAS,EAAE;AAAb,CAAD,EAAmB,CAAnB,CAAnB,EAA0C,cAA1C,CAHJ,CAAb;;AAiBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,QAAwB;AAAA,MAArBC,IAAqB,SAArBA,IAAqB;AAAA,MAAZC,KAAY;;AACnC,MAAMC,GAAG,GAAGC,OAAO,+BAAwBH,IAAxB,UAAnB;;AACA,SAAO,oBAAC,OAAD,oBAAaC,KAAb;AAAoB,IAAA,uBAAuB,EAAE;AAAEG,MAAAA,MAAM,EAAEF;AAAV,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAHD;;AAKAH,IAAI,CAACM,SAAL,GAAiB;AACfL,EAAAA,IAAI,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UADR;AAEfd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAFF;AAGfd,EAAAA,MAAM,EAAEN,SAAS,CAACoB,MAHH;AAIflB,EAAAA,OAAO,EAAEF,SAAS,CAACkB,MAJJ;AAKfG,EAAAA,OAAO,EAAErB,SAAS,CAACsB;AALJ,CAAjB;AAQA,eAAeX,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { palette } from 'styled-theme'\nimport { ifProp } from 'styled-tools'\n\nconst fontSize = ({ width, height }) => {\n  const size = width || height\n  return size ? `${size / 16}rem` : '1.25em'\n}\n\nconst Wrapper = styled.span`\n  display: inline-block;\n  font-size: ${fontSize};\n  color: ${ifProp('palette', palette({ grayscale: 0 }, 1), 'currentcolor')};\n  width: 1em;\n  height: 1em;\n  margin: 0.1em;\n  box-sizing: border-box;\n\n  & > svg {\n    width: 100%;\n    height: 100%;\n    fill: currentColor;\n    stroke: currentColor;\n  }\n`\n\nconst Icon = ({ icon, ...props }) => {\n  const svg = require(`!raw-loader!./icons/${icon}.svg`)\n  return <Wrapper {...props} dangerouslySetInnerHTML={{ __html: svg }} />\n}\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  palette: PropTypes.string,\n  reverse: PropTypes.bool,\n}\n\nexport default Icon\n"]},"metadata":{},"sourceType":"module"}