{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: \", \";\\n  font-family: \", \";\\n  color: \", \";\\n  background-color: \", \";\\n  padding: \", \";\\n  white-space: \", \";\\n  overflow: auto;\\n  line-height: 150%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { font, palette } from 'styled-theme';\nimport { ifProp } from 'styled-tools';\nvar PreformattedText = styled.pre(_templateObject(), ifProp('block', 'block', 'inline'), font('pre'), palette({\n  grayscale: 0\n}, 1), palette('grayscale', 1, true), ifProp('block', '1em', '0 0.5em'), ifProp('wrapped', 'pre-wrap', 'nowrap'));\nPreformattedText.propTypes = {\n  palette: PropTypes.string,\n  reverse: PropTypes.bool,\n  block: PropTypes.bool,\n  wrapped: PropTypes.bool\n};\nPreformattedText.defaultProps = {\n  palette: 'grayscale'\n};\nexport default PreformattedText;","map":{"version":3,"sources":["/Users/seungmikim/Documents/uriyang/code_playground/12_atomic-react/atomic-react/src/components/atoms/PreformattedText/index.js"],"names":["PropTypes","styled","font","palette","ifProp","PreformattedText","pre","grayscale","propTypes","string","reverse","bool","block","wrapped","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,cAA9B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,IAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAV,oBACTF,MAAM,CAAC,OAAD,EAAU,OAAV,EAAmB,QAAnB,CADG,EAELF,IAAI,CAAC,KAAD,CAFC,EAGXC,OAAO,CAAC;AAAEI,EAAAA,SAAS,EAAE;AAAb,CAAD,EAAmB,CAAnB,CAHI,EAIAJ,OAAO,CAAC,WAAD,EAAc,CAAd,EAAiB,IAAjB,CAJP,EAKTC,MAAM,CAAC,OAAD,EAAU,KAAV,EAAiB,SAAjB,CALG,EAMLA,MAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,QAAxB,CAND,CAAtB;AAWAC,gBAAgB,CAACG,SAAjB,GAA6B;AAC3BL,EAAAA,OAAO,EAAEH,SAAS,CAACS,MADQ;AAE3BC,EAAAA,OAAO,EAAEV,SAAS,CAACW,IAFQ;AAG3BC,EAAAA,KAAK,EAAEZ,SAAS,CAACW,IAHU;AAI3BE,EAAAA,OAAO,EAAEb,SAAS,CAACW;AAJQ,CAA7B;AAOAN,gBAAgB,CAACS,YAAjB,GAAgC;AAC9BX,EAAAA,OAAO,EAAE;AADqB,CAAhC;AAIA,eAAeE,gBAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { font, palette } from 'styled-theme'\nimport { ifProp } from 'styled-tools'\n\nconst PreformattedText = styled.pre`\n  display: ${ifProp('block', 'block', 'inline')};\n  font-family: ${font('pre')};\n  color: ${palette({ grayscale: 0 }, 1)};\n  background-color: ${palette('grayscale', 1, true)};\n  padding: ${ifProp('block', '1em', '0 0.5em')};\n  white-space: ${ifProp('wrapped', 'pre-wrap', 'nowrap')};\n  overflow: auto;\n  line-height: 150%;\n`\n\nPreformattedText.propTypes = {\n  palette: PropTypes.string,\n  reverse: PropTypes.bool,\n  block: PropTypes.bool,\n  wrapped: PropTypes.bool,\n}\n\nPreformattedText.defaultProps = {\n  palette: 'grayscale',\n}\n\nexport default PreformattedText\n"]},"metadata":{},"sourceType":"module"}